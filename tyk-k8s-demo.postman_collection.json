{
	"info": {
		"_postman_id": "a9a67026-8423-497e-9649-3549329ea741",
		"name": "tyk-k8s-demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13702323"
	},
	"item": [
		{
			"name": "Component Health Checks",
			"item": [
				{
					"name": "pro-gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Gateway status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.status).to.eql(\"pass\");",
									"});",
									"",
									"pm.test(\"Dashboard status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.details[\"dashboard\"].status).to.eql(\"pass\");",
									"});",
									"",
									"pm.test(\"Redis status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.details[\"redis\"].status).to.eql(\"pass\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{pro-gateway.port}}/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{pro-gateway.port}}",
							"path": [
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "worker-gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Gateway status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.status).to.eql(\"pass\");",
									"});",
									"",
									"pm.test(\"RPC status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.details[\"rpc\"].status).to.eql(\"pass\");",
									"});",
									"",
									"pm.test(\"Redis status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.details[\"redis\"].status).to.eql(\"pass\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{worker-gateway.port}}/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{worker-gateway.port}}",
							"path": [
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Gateway status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.status).to.eql(\"pass\");",
									"});",
									"",
									"pm.test(\"Redis status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.details[\"redis\"].status).to.eql(\"pass\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{gateway.port}}/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{gateway.port}}",
							"path": [
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Gateway status is pass\", function () {",
									"    var health = pm.response.json();",
									"    pm.expect(health.status).to.eql(\"ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{dashboard.port}}/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{dashboard.port}}",
							"path": [
								"hello"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deployments",
			"item": [
				{
					"name": "operator-graphql",
					"item": [
						{
							"name": "trevorblades",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Looking up Canada!\", function () {",
											"    var res = pm.response.json();",
											"    pm.expect(res.data.country.code).to.eql(\"CA\");",
											"    pm.expect(res.data.country.name).to.eql(\"Canada\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  country(code:\"CA\") {\n    code\n    name\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:{{pro-gateway.port}}/trevorblades",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{pro-gateway.port}}",
									"path": [
										"trevorblades"
									]
								}
							},
							"response": []
						},
						{
							"name": "Social Media App - Stitch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Testing stitching...\", function () {",
											"    var res = pm.response.json();",
											"    pm.expect(res.data.user.name).to.eql(\"Leanne Graham\");",
											"    pm.expect(res.data.user.posts[0].title).to.eql(\"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");",
											"    pm.expect(res.data.user.posts[0].comments[0].email).to.eql(\"Eliseo@gardner.biz\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  user(id:1) {\n  \tname\n  \tposts {\n      title\n      comments {\n        email\n      }\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:{{pro-gateway.port}}/udg",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{pro-gateway.port}}",
									"path": [
										"udg"
									]
								}
							},
							"response": []
						},
						{
							"name": "Social Media App - Federated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Testing stitching...\", function () {",
											"    var res = pm.response.json();",
											"    pm.expect(res.data.user.name).to.eql(\"Leanne Graham\");",
											"    pm.expect(res.data.user.posts[0].title).to.eql(\"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");",
											"    pm.expect(res.data.user.posts[0].comments[0].email).to.eql(\"Eliseo@gardner.biz\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  user(id:1) {\n  \tname\n  \tposts {\n      title\n      comments {\n        email\n      }\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:{{pro-gateway.port}}/social-media-app-federated/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{pro-gateway.port}}",
									"path": [
										"social-media-app-federated",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "gateway.port",
			"value": "8080"
		},
		{
			"key": "worker-gateway.port",
			"value": "8081"
		},
		{
			"key": "pro-gateway.port",
			"value": "8080"
		},
		{
			"key": "dashboard.port",
			"value": "3000"
		},
		{
			"key": "mdcb.health_port",
			"value": "8181"
		}
	]
}