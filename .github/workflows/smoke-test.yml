name: Smoke Tests

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

env:
  MAX_ATTEMPTS: 5
  TIMEOUT: 15
  WORKER_WAIT: 60

jobs:
  oss:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cluster: [v1.20.2, v1.19.7, v1.18.15, v1.17.17, v1.16.15]
        mode: [tyk-gateway]
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: .github/kind-cluster-${{ matrix.cluster }}.yml

      - name: Install helm
        uses: Azure/setup-helm@v1.1
        with:
          version: v3.5.3

      - name: Install newman
        run: |
          sudo apt update && \
          sudo apt install nodejs npm -y && \
          npm install -g newman

      - name: Copy .env file
        run: cp .env.example .env

      - name: Deploy basic ${{ matrix.mode }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}
          command: |
            ./up.sh \
              --namespace ${{ matrix.mode }} \
              --expose port-forward \
              ${{ matrix.mode }}

      - name: Run ${{ matrix.mode }} postman tests
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }} \
              --ports && \
            ./up.sh \
              --namespace ${{ matrix.mode }} \
              --expose port-forward \
              ${{ matrix.mode }}
          command: newman run --folder gateway tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }}
        run: ./down.sh --namespace ${{ matrix.mode }}

      - name: Deploy ${{ matrix.mode }} with a redis cluster
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}-redis-cluster
          command: |
            ./up.sh \
              --namespace ${{ matrix.mode }}-redis-cluster \
              --redis redis-cluster \
              --expose port-forward \
              ${{ matrix.mode }}

      - name: Run ${{ matrix.mode }} postman tests when setup with redis-cluster
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}-redis-cluster \
              --ports && \
            ./up.sh \
              --namespace ${{ matrix.mode }}-redis-cluster \
              --redis redis-cluster \
              --expose port-forward \
              ${{ matrix.mode }}
          command: newman run --folder gateway tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }}-redis-cluster
        run: ./down.sh --namespace ${{ matrix.mode }}-redis-cluster

  pro:
    runs-on: ubuntu-latest
    needs: [oss]
    strategy:
      fail-fast: false
      matrix:
        cluster: [v1.20.2, v1.19.7, v1.18.15, v1.17.17, v1.16.15]
        mode: [tyk-pro,tyk-cp]
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: .github/kind-cluster-${{ matrix.cluster }}.yml

      - name: Install helm
        uses: Azure/setup-helm@v1.1
        with:
          version: v3.5.3

      - name: Install newman
        run: |
          sudo apt update && \
          sudo apt install nodejs npm -y && \
          npm install -g newman

      - name: Copy .env file
        run: cp .env.example .env

      - name: Deploy basic ${{ matrix.mode }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}
          command: |
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            MDCB_LICENSE="${{ secrets.MDCB_LICENSE }}" \
            ./up.sh \
              --namespace ${{ matrix.mode }} \
              --expose port-forward \
              ${{ matrix.mode }}

      - name: Run ${{ matrix.mode }} postman tests
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }} \
              --ports && \
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            MDCB_LICENSE="${{ secrets.MDCB_LICENSE }}" \
            ./up.sh \
              --namespace ${{ matrix.mode }} \
              --expose port-forward \
              ${{ matrix.mode }}
          command: |
            newman run --folder pro-gateway tyk-k8s-demo.postman_collection.json && \
            newman run --folder dashboard tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }}
        run: ./down.sh --namespace ${{ matrix.mode }}

      - name: Deploy ${{ matrix.mode }} with a redis cluster
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}-redis-cluster
          command: |
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            MDCB_LICENSE="${{ secrets.MDCB_LICENSE }}" \
            ./up.sh \
              --namespace ${{ matrix.mode }}-redis-cluster \
              --redis redis-cluster \
              --expose port-forward \
              ${{ matrix.mode }}

      - name: Run ${{ matrix.mode }} postman tests when setup with redis-cluster
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}-redis-cluster \
              --ports && \
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            MDCB_LICENSE="${{ secrets.MDCB_LICENSE }}" \
            ./up.sh \
              --namespace ${{ matrix.mode }}-redis-cluster \
              --redis redis-cluster \
              --expose port-forward \
              ${{ matrix.mode }}
          command: |
            newman run --folder pro-gateway tyk-k8s-demo.postman_collection.json && \
            newman run --folder dashboard tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }}-redis-cluster
        run: ./down.sh --namespace ${{ matrix.mode }}-redis-cluster

  worker:
    runs-on: ubuntu-latest
    needs: [oss,pro]
    strategy:
      fail-fast: false
      matrix:
        cluster: [v1.20.2, v1.19.7, v1.18.15, v1.17.17, v1.16.15]
        mode: [tyk-worker]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: .github/kind-cluster-${{ matrix.cluster }}.yml

      - name: Install helm
        uses: Azure/setup-helm@v1.1
        with:
          version: v3.5.3

      - name: Install newman
        run: |
          sudo apt update && \
          sudo apt install nodejs npm -y && \
          npm install -g newman

      - name: Copy .env file
        run: cp .env.example .env

      - name: Deploy basic ${{ matrix.mode }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}
          command: |
            TYK_WORKER_CONNECTIONSTRING="${{ secrets.WORKER_MDCB_HOST }}" \
            TYK_WORKER_ORGID="${{ secrets.WORKER_RPC_KEY }}" \
            TYK_WORKER_AUTHTOKEN="${{ secrets.WORKER_API_KEY }}" \
            ./up.sh \
              --namespace ${{ matrix.mode }} \
              --expose port-forward \
              ${{ matrix.mode }} && \
            sleep ${{ env.WORKER_WAIT }}

      - name: Run ${{ matrix.mode }} postman tests
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }} \
              --ports && \
            TYK_WORKER_CONNECTIONSTRING="${{ secrets.WORKER_MDCB_HOST }}" \
            TYK_WORKER_ORGID="${{ secrets.WORKER_RPC_KEY }}" \
            TYK_WORKER_AUTHTOKEN="${{ secrets.WORKER_API_KEY }}" \
            ./up.sh \
              --namespace ${{ matrix.mode }} \
              --expose port-forward \
              ${{ matrix.mode }} && \
            sleep ${{ env.WORKER_WAIT }}
          command: newman run --folder worker-gateway tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }}
        run: ./down.sh --namespace ${{ matrix.mode }}

      - name: Deploy ${{ matrix.mode }} with a redis cluster
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
              ./down.sh \
              --namespace ${{ matrix.mode }}-redis-cluster
          command: |
            TYK_WORKER_CONNECTIONSTRING="${{ secrets.WORKER_MDCB_HOST }}" \
            TYK_WORKER_ORGID="${{ secrets.WORKER_RPC_KEY }}" \
            TYK_WORKER_AUTHTOKEN="${{ secrets.WORKER_API_KEY }}" \
            ./up.sh \
              --namespace ${{ matrix.mode }}-redis-cluster \
              --redis redis-cluster \
              --expose port-forward \
              ${{ matrix.mode }} && \
            sleep ${{ env.WORKER_WAIT }}

      - name: Run ${{ matrix.mode }} postman tests when setup with redis-cluster
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --ports \
              --namespace ${{ matrix.mode }}-redis-cluster && \
            TYK_WORKER_CONNECTIONSTRING="${{ secrets.WORKER_MDCB_HOST }}" \
            TYK_WORKER_ORGID="${{ secrets.WORKER_RPC_KEY }}" \
            TYK_WORKER_AUTHTOKEN="${{ secrets.WORKER_API_KEY }}" \
            ./up.sh \
              --namespace ${{ matrix.mode }}-redis-cluster \
              --redis redis-cluster \
              --expose port-forward \
              ${{ matrix.mode }} && \
            sleep ${{ env.WORKER_WAIT }}
          command: newman run --folder worker-gateway tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }}-redis-cluster
        run: ./down.sh --namespace ${{ matrix.mode }}-redis-cluster
