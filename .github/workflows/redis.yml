name: Tyk Redis Tests

# Controls when the workflow will run
on: [pull_request, workflow_dispatch]

env:
  MAX_ATTEMPTS: 3
  TIMEOUT: 30

jobs:
  tyk-redis:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        redis:
          - redis
          - redis-cluster
          - redis-sentinel
      max-parallel: 3
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: .github/kind-cluster-v1.23.13.yml

      - name: Install helm
        uses: Azure/setup-helm@v1.1
        with:
          version: v3.5.3

      - name: Install newman
        run: |
          sudo apt update && \
          sudo apt install nodejs npm -y && \
          npm install -g newman

      - name: Copy .env file
        run: cp .env.example .env

      - name: Deploy tyk-cp with ${{ matrix.redis }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          command: |
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            MDCB_LICENSE="${{ secrets.MDCB_LICENSE }}" \
            ./up.sh -v \
              --namespace tyk-${{ matrix.redis }} \
              --redis ${{ matrix.redis }} \
              tyk-cp

      - name: Sleep 1 minute
        run: sleep 60

      - name: Test Tyk deployment
        run: newman run --folder gateway --env-var "deployment=control-plane" tyk-k8s-demo.postman_collection.json

      - name: Deploy tyk-dp with ${{ matrix.redis }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          command: |
            TYK_WORKER_CONNECTIONSTRING="mdcb-svc-tyk-cp-tyk-pro.tyk-${{ matrix.redis }}.svc:9090" \
            TYK_WORKER_ORGID="$(kubectl get secret --namespace tyk-${{ matrix.redis }} tyk-operator-conf -o=jsonpath='{.data.TYK_ORG}' | base64 -d)" \
            TYK_WORKER_AUTHTOKEN="$(kubectl get secret --namespace tyk-${{ matrix.redis }} tyk-operator-conf -o=jsonpath='{.data.TYK_AUTH}' | base64 -d)" \
            TYK_WORKER_USESSL=false \
            ./up.sh -v \
              --namespace tyk-${{ matrix.redis }} \
              --redis ${{ matrix.redis }} \
              tyk-dp

      - name: Sleep 1 minute
        run: sleep 60

      - name: Test Tyk deployment
        run: newman run --folder gateway --env-var "gateway.port=8081" --env-var "deployment=data-plane" tyk-k8s-demo.postman_collection.json
