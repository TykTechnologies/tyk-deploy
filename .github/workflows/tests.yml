name: Smoke Tests

# Controls when the workflow will run
on: [pull_request, workflow_dispatch]

env:
  MAX_ATTEMPTS: 5
  TIMEOUT: 30
  WORKER_WAIT: 60

jobs:
  oss:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cluster: [v1.20.2, v1.19.7, v1.18.15]
        mode: [tyk-gateway]
        redis: [redis, redis-cluster, redis-sentinel]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: .github/kind-cluster-${{ matrix.cluster }}.yml

      - name: Install helm
        uses: Azure/setup-helm@v1.1
        with:
          version: v3.5.3

      - name: Install newman
        run: |
          sudo apt update && \
          sudo apt install nodejs npm -y && \
          npm install -g newman

      - name: Copy .env file
        run: cp .env.example .env

      - name: Deploy ${{ matrix.mode }} with ${{ matrix.redis }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }}
          command: |
            ./up.sh \
              -v \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --expose port-forward \
              --redis ${{ matrix.redis }} \
              ${{ matrix.mode }}

      - name: Run ${{ matrix.mode }} with ${{ matrix.redis }} postman tests
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh --namespace ${{ matrix.mode }}-${{ matrix.redis }} && \
            ./up.sh \
              -v \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --expose port-forward \
              --redis ${{ matrix.redis }} \
              ${{ matrix.mode }}
          command: newman run --folder gateway tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }} with ${{ matrix.redis }}
        run: ./down.sh --namespace ${{ matrix.mode }}-${{ matrix.redis }}

  pro:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cluster: [v1.20.2, v1.19.7, v1.18.15]
        mode: [tyk-pro,tyk-cp]
        redis: [redis, redis-cluster, redis-sentinel]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: .github/kind-cluster-${{ matrix.cluster }}.yml

      - name: Install helm
        uses: Azure/setup-helm@v1.1
        with:
          version: v3.5.3

      - name: Install newman
        run: |
          sudo apt update && \
          sudo apt install nodejs npm -y && \
          npm install -g newman

      - name: Copy .env file
        run: cp .env.example .env

      - name: Deploy ${{ matrix.mode }} with ${{ matrix.redis }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }}
          command: |
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            MDCB_LICENSE="${{ secrets.MDCB_LICENSE }}" \
            ./up.sh \
              -v \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --expose port-forward \
              --redis ${{ matrix.redis }} \
              ${{ matrix.mode }}

      - name: Run ${{ matrix.mode }} with ${{ matrix.redis }} postman tests
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh --namespace ${{ matrix.mode }}-${{ matrix.redis }} && \
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            MDCB_LICENSE="${{ secrets.MDCB_LICENSE }}" \
            ./up.sh \
              -v \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --expose port-forward \
              --redis ${{ matrix.redis }} \
              ${{ matrix.mode }}
          command: |
            newman run --folder pro-gateway tyk-k8s-demo.postman_collection.json && \
            newman run --folder dashboard tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }} with ${{ matrix.redis }}
        run: ./down.sh --namespace ${{ matrix.mode }}-${{ matrix.redis }}

  worker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cluster: [v1.20.2, v1.19.7, v1.18.15]
        mode: [tyk-worker]
        redis: [redis, redis-cluster, redis-sentinel]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: .github/kind-cluster-${{ matrix.cluster }}.yml

      - name: Install helm
        uses: Azure/setup-helm@v1.1
        with:
          version: v3.5.3

      - name: Install newman
        run: |
          sudo apt update && \
          sudo apt install nodejs npm -y && \
          npm install -g newman

      - name: Copy .env file
        run: cp .env.example .env

      - name: Deploy ${{ matrix.mode }} with ${{ matrix.redis }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }}
          command: |
            TYK_WORKER_CONNECTIONSTRING="${{ secrets.WORKER_MDCB_HOST }}" \
            TYK_WORKER_ORGID="${{ secrets.WORKER_RPC_KEY }}" \
            TYK_WORKER_AUTHTOKEN="${{ secrets.WORKER_API_KEY }}" \
            ./up.sh \
              -v \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --expose port-forward \
              --redis ${{ matrix.redis }} \
              ${{ matrix.mode }} && \
            sleep ${{ env.WORKER_WAIT }}

      - name: Run ${{ matrix.mode }} with ${{ matrix.redis }} postman tests
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            ./down.sh \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --ports && \
            TYK_WORKER_CONNECTIONSTRING="${{ secrets.WORKER_MDCB_HOST }}" \
            TYK_WORKER_ORGID="${{ secrets.WORKER_RPC_KEY }}" \
            TYK_WORKER_AUTHTOKEN="${{ secrets.WORKER_API_KEY }}" \
            ./up.sh \
              -v \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --expose port-forward \
              --redis ${{ matrix.redis }} \
              ${{ matrix.mode }} && \
            sleep ${{ env.WORKER_WAIT }}
          command: newman run --folder worker-gateway tyk-k8s-demo.postman_collection.json

      - name: Clean up ${{ matrix.mode }} with ${{ matrix.redis }}
        run: ./down.sh --namespace ${{ matrix.mode }}-${{ matrix.redis }}

  deployments:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cluster: [v1.20.2, v1.19.7, v1.18.15]
        mode: [tyk-pro]
        redis: [redis-cluster]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: .github/kind-cluster-${{ matrix.cluster }}.yml

      - name: Install helm
        uses: Azure/setup-helm@v1.1
        with:
          version: v3.5.3

      - name: Install newman
        run: |
          sudo apt update && \
          sudo apt install nodejs npm -y && \
          npm install -g newman

      - name: Copy .env file
        run: cp .env.example .env

      - name: Deploy ${{ matrix.mode }} with ${{ matrix.redis }}
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          command: |
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            PORTAL_LICENSE="${{ secrets.PORTAL_SECRET }}" \
            ./up.sh \
              -v \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --expose port-forward \
              --redis ${{ matrix.redis }} \
              --deployments operator,operator-graphql,operator-httpbin,portal \
              ${{ matrix.mode }}

      - name: Run ${{ matrix.mode }} with ${{ matrix.redis }} postman tests
        uses: nick-invision/retry@v2
        with:
          max_attempts: ${{ env.MAX_ATTEMPTS }}
          timeout_minutes: ${{ env.TIMEOUT }}
          on_retry_command: |
            LICENSE="${{ secrets.DASH_LICENSE }}" \
            PORTAL_LICENSE="${{ secrets.PORTAL_SECRET }}" \
            ./up.sh \
              -v \
              --namespace ${{ matrix.mode }}-${{ matrix.redis }} \
              --expose port-forward \
              --redis ${{ matrix.redis }} \
              --deployments operator,operator-graphql,operator-httpbin,portal \
              ${{ matrix.mode }}
          command: |
            newman run --folder Deployments tyk-k8s-demo.postman_collection.json
